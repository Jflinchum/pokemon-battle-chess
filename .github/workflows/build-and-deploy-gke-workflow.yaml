# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - gke-release

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-1
  GKE_ZONE: us-central1
  GAME_SERVER_DEPLOYMENT: k8s/game-server
  LOBBY_SERVER_DEPLOYMENT: k8s/lobby-server

  DOCKER_REPO: jonflinchum
  GAME_SERVER_IMAGE: pokemon-gambit-game-server
  LOBBY_SERVER_IMAGE: pokemon-gambit-lobby-server

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GKE_SA_KEY }}"

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
        with:
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build Game Server
        run: |-
          docker build \
            --tag "$DOCKER_REPO/$GAME_SERVER_IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            . \
            -f ./gameServer/Dockerfile

      - name: Build Lobby Server
        run: |-
          docker build \
            --tag "$DOCKER_REPO/$LOBBY_SERVER_IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            . \
            -f ./lobbyServer/Dockerfile

      # Push the Docker image to Google Container Registry
      - name: Publish Game Server
        run: |-
          docker push "$DOCKER_REPO/$GAME_SERVER_IMAGE:$GITHUB_SHA"

      - name: Publish Lobby Server
        run: |-
          docker push "$DOCKER_REPO/$LOBBY_SERVER_IMAGE:$GITHUB_SHA"

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      # Deploy the Docker Game Server image to the GKE cluster
      - name: Deploy
        working-directory: k8s/game-server
        run: |-
          ${{ github.workspace }}/kustomize edit set image $DOCKER_REPO/$GAME_SERVER_IMAGE:latest:TAG=$DOCKER_REPO/$GAME_SERVER_IMAGE:$GITHUB_SHA
          ${{ github.workspace }}/kustomize build . | kubectl apply -f -
          kubectl rollout status $GAME_SERVER_DEPLOYMENT
          kubectl get services -o wide

      # Deploy the Docker Lobby Server image to the GKE cluster
      - name: Deploy
        working-directory: k8s/lobby-server
        run: |-
          ${{ github.workspace }}/kustomize edit set image $DOCKER_REPO/$LOBBY_SERVER_IMAGE:latest:TAG=$DOCKER_REPO/$LOBBY_SERVER_IMAGE:$GITHUB_SHA
          ${{ github.workspace }}/kustomize build . | kubectl apply -f -
          kubectl rollout status $LOBBY_SERVER_DEPLOYMENT
          kubectl get services -o wide
